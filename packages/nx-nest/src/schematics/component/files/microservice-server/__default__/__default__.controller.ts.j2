import { Controller } from '@nestjs/common'
import { MessagePattern } from '@nestjs/microservices'

import {
  MicroserviceRequest,
  MicroserviceResponse,
  MessageQueues,
  {{ casing.injected.microservices.names.pattern }}  } from '@{{ packageScope }}/{{ constants.MICROSERVICE_PROVIDER_PACKAGE }}'
import { {{ casing.pascal }}Microservice } from './{{ name }}.service'

@Controller()
export class {{ casing.pascal }}Microcontroller {
  constructor (private readonly {{ casing.camel }}Microservice: {{ casing.pascal }}Microservice) {}

  @MessagePattern({{ casing.injected.microservices.names.pattern }}.DEFAULT)
  default (
    options: MicroserviceRequest<MessageQueues.{{ casing.injected.microservices.names.queue }}, {{ casing.injected.microservices.names.pattern }}.DEFAULT>
  ): Promise<MicroserviceResponse<MessageQueues.{{ casing.injected.microservices.names.queue }}, {{ casing.injected.microservices.names.pattern }}.DEFAULT>> {
    return this.{{ casing.camel }}Microservice.default(options)
  }
}
