import { Controller } from '@nestjs/common'
import { MessagePattern } from '@nestjs/microservices'

import { {{ casing.injected.microservices.names.interface }}, {{ casing.injected.microservices.names.pattern }}  } from '@{{ packageScope }}/{{ constants.MICROSERVICE_PROVIDER_PACKAGE }}'
import { DefaultMicroservice } from './{{ name }}.service'

@Controller()
export class {{ casing.pascal }}Microcontroller {
  constructor (private readonly {{ casing.camel }}Microservice: {{ casing.pascal }}Microservice) {}

  @MessagePattern({{ casing.injected.microservices.names.pattern }}.{{ casing.injected.microservices.names.default }})
  public default (
    options: {{ casing.injected.microservices.names.interface }}[{{ casing.injected.microservices.names.pattern }}.{{ casing.injected.microservices.names.default }}]['request']
  ): Promise<{{ casing.injected.microservices.names.interface }}[{{ casing.injected.microservices.names.pattern }}.{{ casing.injected.microservices.names.default }}]['response']> {
    return this.{{ casing.camel }}Microservice.default(options)
  }
}
