{
  "$schema": "http://json-schema.org/schema",
  "$id": "nx-nest:application",
  "title": "Create a Nest application from skeleton with NX.",
  "examples": [
    {
      "command": "g app myapp",
      "description": "Initiate a application in interactive mode."
    },
    {
      "command": "g app myapp -c server -c bgtask -s graphql",
      "description": "Initiate GraphQL API with bgtask enabled."
    }
  ],
  "type": "object",
  "properties": {
    "name": {
      "description": "The name of the application.",
      "type": "string",
      "$default": {
        "$source": "argv",
        "index": 0
      },
      "x-prompt": "What name would you like to use for the application?"
    },
    "components": {
      "description": "Components to be embedded.",
      "alias": "c",
      "items": {
        "manyOf": [
          {
            "type": "string",
            "enum": ["server", "microservice-server", "microservice-client", "bgtask", "command"]
          }
        ]
      }
    },
    "server": {
      "description": "If server component is selected, specifies the type.",
      "type": "string",
      "alias": "s",
      "enum": ["graphql", "restful"]
    },
    "microservice": {
      "description": "If microservices component is selected, specifies the type.",
      "type": "string",
      "alias": "m",
      "enum": ["rabbitmq"]
    },
    "database": {
      "description": "Database that is desired to be used.",
      "type": "string",
      "alias": "db",
      "enum": ["none", "typeorm-mysql", "typeorm-postgresql", "mongoose-mongodb"]
    },
    "linter": {
      "description": "The tool to use for running lint checks.",
      "type": "string",
      "enum": ["eslint"],
      "default": "eslint"
    },
    "tests": {
      "description": "Test runner to use for unit and e2e tests",
      "type": "string",
      "enum": ["jest", "none"]
    },
    "extensions": {
      "description": "Enable extensions.",
      "items": {
        "manyOf": [
          {
            "type": "string",
            "enum": ["external-backend-interfaces"]
          }
        ]
      }
    }
  },
  "required": []
}
