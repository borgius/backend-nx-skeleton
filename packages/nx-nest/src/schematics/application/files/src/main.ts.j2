{% if components | length != 1 %}
import { InternalServerErrorException } from '@nestjs/common'

import { service } from './constants'
{% endif %}

{% if 'server' in components %}
import { createApplication as createServerApplication } from './server/init'
{% endif %}
{% if 'microservice-server' in components %}
import { createApplication as createMicroserviceApplication } from './microservice-server/init'
{% endif %}
{% if 'bgtask' in components %}
import { createApplication as createTaskApplication } from './task/init'
{% endif %}
{% if 'command' in components %}
import { createApplication as createCommandApplication } from './command/init'
{% endif %}

function bootstrap (): Promise<void> {
  {% if components | length != 1 %}
  switch (String(process.env.NODE_SERVICE).toLowerCase()) {
  {% endif %}
  {% if 'server' in components %}
  {% if components | length != 1 %}
  case Service.SERVER:
  {% endif %}
    return createServerApplication()
  {% endif %}
  {% if 'microservice-server' in components %}
  {% if components | length != 1 %}
  case Service.MICROSERVICE_SERVER:
  {% endif %}
    return createMicroserviceApplication()
  {% endif %}
  {% if 'bgtask' in components %}
  {% if components | length != 1 %}
  case Service.TASK:
  {% endif %}
    return createTaskApplication()
  {% endif %}
  {% if 'command' in components %}
  {% if components | length != 1 %}
  case Service.COMMAND:
  {% endif %}
    return createCommandApplication()
  {% endif %}
  {% if components | length != 1 %}
  default:
    throw new InternalServerErrorException('NODE_SERVICE environment variable is not set.')
  }
  {% endif %}
}

bootstrap()
