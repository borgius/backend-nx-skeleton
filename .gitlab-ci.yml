image: node:14-alpine

workflow:
  rules:
    - if: $CI_COMMIT_REF_NAME =~ /^master$/
      when: always
    - if: $CI_COMMIT_REF_NAME =~ /^develop$/
      when: always

stages:
  - install
  - lint
  - build
  - publish

variables:
  PARENT_PIPELINE_ID: $CI_PIPELINE_ID

cache:
  paths:
    - node_modules/
    - packages/*/node_modules

install:
  stage: install
  script:
    - yarn --frozen-lockfile
  artifacts:
    paths:
      - node_modules/
      - packages/*/node_modules
    expire_in: 30 minutes
  tags:
    - node

lint:
  stage: lint
  script:
    # - yarn command --parallel -- lint:check
    - echo "disabled for now"
  tags:
    - node

build:
  stage: build
  script:
    - yarn command --scope "@webundsoehne/nx-tools" --scope "@webundsoehne/nx-builders" --include-dependencies build
  artifacts:
    paths:
      - packages/*/dist
    expire_in: 30 minutes
  only:
    - develop
    - master
  tags:
    - node

publish:
  stage: publish
  image: cenk1cenk2/drone-semantic-release
  variables:
    PLUGIN_GIT_METHOD: gl
    PLUGIN_MODE: predict
    PLUGIN_ADD_MODULES: semantic-release-monorepo
    PLUGIN_OVERRIDE: npx --no-install lerna exec --scope "@webundsoehne/nx-builders" --concurrency 1 -- npx --no-install semantic-release -e semantic-release-monorepo
    PLUGIN_GIT_USER_EMAIL: ck@webundsoehne.com
    PLUGIN_GITLAB_TOKEN: $BANDAID_API_TOKEN
    GIT_CLONE_PATH: /drone/src
  script:
    - pwd
    - ls -la
    - /semantic-release/release.sh
  only:
    - develop
    - master
  tags:
    - docker
